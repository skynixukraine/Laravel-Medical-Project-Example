{
    "openapi": "3.0.0",
    "info": {
        "title": "Online hautarzt API",
        "version": "1.0.0"
    },
    "paths": {
        "/api/v1/doctors/register": {
            "post": {
                "tags": [
                    "Doctors"
                ],
                "summary": "Register a new doctor",
                "description": "Register a new doctor",
                "operationId": "App\\Http\\Controllers\\API\\V1\\DoctorController::register",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "email",
                                    "phone_number",
                                    "password",
                                    "recaptcha",
                                    "accepted"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "A doctor's e-mail",
                                        "format": "string",
                                        "example": "doctor@gmail.com"
                                    },
                                    "phone_number": {
                                        "description": "A doctor's phone number",
                                        "format": "string",
                                        "example": "+3 8(032) 345-34-34"
                                    },
                                    "password": {
                                        "description": "A doctor's password",
                                        "format": "string"
                                    },
                                    "password_confirmation": {
                                        "description": "A doctor's password confirmation",
                                        "format": "string"
                                    },
                                    "recaptcha": {
                                        "description": "Recaptcha value. Action must be 'register_doctor",
                                        "format": "string"
                                    },
                                    "accepted": {
                                        "description": "Accept terms and conditions",
                                        "format": "boolean",
                                        "example": "1"
                                    },
                                    "board_certification": {
                                        "description": "Doctor's board certification",
                                        "format": "binary"
                                    },
                                    "medical_degree": {
                                        "description": "Doctor's medical degree",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "A doctor has been succesfully registered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "doctor_id": {
                                            "format": "integer",
                                            "example": "1"
                                        },
                                        "access_token": {
                                            "format": "string",
                                            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImp0aSI6IjQ3ZGY5ZDdkYmY4ZmM1Mz"
                                        },
                                        "expires_at": {
                                            "format": "object",
                                            "$ref": "#/components/schemas/CarbonResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "There are some validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "schema": "ValidationError",
                                    "title": "Validation error",
                                    "properties": {
                                        "message": {
                                            "format": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "photo": {
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The photo field is required."
                                                    }
                                                },
                                                "email": {
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email field is required."
                                                    }
                                                },
                                                "password": {
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The password field is required."
                                                    }
                                                },
                                                "accepted": {
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The accepted field is required."
                                                    }
                                                },
                                                "recaptcha": {
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The recaptcha field is required."
                                                    }
                                                }
                                            },
                                            "type": "object",
                                            "format": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal technical error was happened",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "format": "string",
                                            "example": "Server Error."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/verify/{id}": {
            "get": {
                "tags": [
                    "Doctors"
                ],
                "summary": "Verify doctor's email",
                "description": "Verify doctor's email",
                "operationId": "App\\Http\\Controllers\\API\\V1\\DoctorController::verify",
                "responses": {
                    "200": {
                        "description": "An e-mail has been verified"
                    },
                    "304": {
                        "description": "An e-mail already verified"
                    },
                    "401": {
                        "description": "Invalid signature",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "format": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "format": "string",
                                            "example": "No query results for model [App\\Models\\Doctor]."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal technical error was happened",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "format": "string",
                                            "example": "Something went wrong, please try again later."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/resend/{id}": {
            "get": {
                "tags": [
                    "Doctors"
                ],
                "summary": "Resend verification email",
                "description": "Verify doctor's email",
                "operationId": "App\\Http\\Controllers\\API\\V1\\DoctorController::resend",
                "responses": {
                    "200": {
                        "description": "An e-mail has been sent"
                    },
                    "304": {
                        "description": "An e-mail already verified"
                    },
                    "404": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "format": "string",
                                            "example": "No query results for model [App\\Models\\Doctor]."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal technical error was happened",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "format": "string",
                                            "example": "Something went wrong, please try again later."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/login": {
            "post": {
                "tags": [
                    "Doctors"
                ],
                "summary": "Create a token for a doctor",
                "description": "Create a token for a doctor",
                "operationId": "App\\Http\\Controllers\\API\\V1\\DoctorController::login",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password",
                                    "recaptcha"
                                ],
                                "properties": {
                                    "email": {
                                        "title": "E-mail",
                                        "description": "A doctor's e-mail",
                                        "format": "string",
                                        "example": "doctor@gmail.com"
                                    },
                                    "password": {
                                        "title": "Password",
                                        "description": "A doctor's password",
                                        "format": "string",
                                        "example": "12345678"
                                    },
                                    "recaptcha": {
                                        "title": "Recaptcha",
                                        "description": "Recaptcha value. Action must be 'login_doctor'",
                                        "format": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Token has been created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "doctor_id": {
                                            "format": "integer",
                                            "example": "1"
                                        },
                                        "access_token": {
                                            "format": "string",
                                            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImp0aSI6IjQ3ZGY5ZDdkYmY4ZmM1Mz"
                                        },
                                        "expires_at": {
                                            "format": "object",
                                            "$ref": "#/components/schemas/CarbonResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "There are some validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Validation error",
                                    "properties": {
                                        "message": {
                                            "format": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email field is required."
                                                    }
                                                },
                                                "password": {
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The password field is required."
                                                    }
                                                },
                                                "recaptcha": {
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The recaptcha field is required."
                                                    }
                                                }
                                            },
                                            "type": "object",
                                            "format": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authorization failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "format": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal technical error was happened",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "format": "string",
                                            "example": "Something went wrong, please try again later."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/logout": {
            "post": {
                "tags": [
                    "Doctors"
                ],
                "summary": "Revoke current token",
                "description": "Revoke current token",
                "operationId": "App\\Http\\Controllers\\API\\V1\\DoctorController::logout",
                "responses": {
                    "200": {
                        "description": "Token has been revoked"
                    },
                    "401": {
                        "description": "Authorization failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "format": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal technical error was happened",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "format": "string",
                                            "example": "Something went wrong, please try again later."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/send-reset-link": {
            "post": {
                "tags": [
                    "Doctors"
                ],
                "summary": "Send reset password link",
                "description": "Send email message for a doctor with a link for password reseting",
                "operationId": "App\\Http\\Controllers\\API\\V1\\DoctorController::sendResetLinkEmail",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "email",
                                    "recaptcha"
                                ],
                                "properties": {
                                    "email": {
                                        "title": "E-mail",
                                        "description": "A doctor's e-mail",
                                        "format": "string",
                                        "example": "doctor@gmail.com"
                                    },
                                    "recaptcha": {
                                        "title": "Recaptcha",
                                        "description": "Recaptcha value. Action must be 'send_reset_link'",
                                        "format": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "An e-mail has been sent"
                    },
                    "422": {
                        "description": "There are some validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "schema": "ValidationError",
                                    "title": "Validation error",
                                    "properties": {
                                        "message": {
                                            "format": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email field is required."
                                                    }
                                                },
                                                "recaptcha": {
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The recaptcha field is required."
                                                    }
                                                }
                                            },
                                            "type": "object",
                                            "format": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal technical error was happened",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "format": "string",
                                            "example": "Something went wrong, please try again later."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/update-password": {
            "patch": {
                "tags": [
                    "Doctors"
                ],
                "summary": "Set a new password for a doctor",
                "description": "Set a new password for a doctor",
                "operationId": "App\\Http\\Controllers\\API\\V1\\DoctorController::updatePassword",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "email",
                                    "recaptcha",
                                    "password",
                                    "password_confirmation",
                                    "token"
                                ],
                                "properties": {
                                    "email": {
                                        "title": "E-mail",
                                        "description": "A doctor's e-mail",
                                        "format": "string",
                                        "example": "doctor@gmail.com"
                                    },
                                    "password": {
                                        "title": "Password",
                                        "description": "A new doctor's password",
                                        "format": "string"
                                    },
                                    "password_confirmation": {
                                        "title": "Password confirmation",
                                        "description": "A new doctor's password confirmation",
                                        "format": "string"
                                    },
                                    "token": {
                                        "title": "Token",
                                        "description": "Token value taken from reset password link",
                                        "format": "string"
                                    },
                                    "recaptcha": {
                                        "title": "Recaptcha",
                                        "description": "Recaptcha value. Action must be 'update_password'",
                                        "format": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A new password has been setted"
                    },
                    "422": {
                        "description": "There are some validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "schema": "ValidationError",
                                    "title": "Validation error",
                                    "properties": {
                                        "message": {
                                            "format": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email field is required."
                                                    }
                                                },
                                                "password": {
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The password field is required."
                                                    }
                                                },
                                                "marker_address": {
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The marker address field is required."
                                                    }
                                                },
                                                "token": {
                                                    "items": {
                                                        "type": "string",
                                                        "example": "Token does not exists."
                                                    }
                                                },
                                                "recaptcha": {
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The recaptcha field is required."
                                                    }
                                                }
                                            },
                                            "type": "object",
                                            "format": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal technical error was happened",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "format": "string",
                                            "example": "Something went wrong, please try again later."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/doctors/{id}": {
            "get": {
                "tags": [
                    "Doctors"
                ],
                "summary": "Get a doctor resource by id",
                "description": "Get a doctor resource by id",
                "operationId": "App\\Http\\Controllers\\API\\V1\\DoctorController::show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "A doctor's identificator",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A doctor has been succesfully received",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/DoctorResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authorization failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "format": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Current user has not permissions to do this action",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "format": "string",
                                            "example": "This action is unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "format": "string",
                                            "example": "No query results for model [App\\Models\\Doctor]."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal technical error was happened",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "format": "string",
                                            "example": "Something went wrong, please try again later."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Doctors"
                ],
                "summary": "Update a doctor resource by id",
                "description": "Update a doctor resource by id",
                "operationId": "App\\Http\\Controllers\\API\\V1\\DoctorController::update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "A doctor's identificator",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A doctor has been succesfully updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/DoctorResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authorization failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "format": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Current user has not permissions to do this action",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "format": "string",
                                            "example": "This action is unauthorized.."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "format": "string",
                                            "example": "No query results for model [App\\Models\\Doctor]."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal technical error was happened",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "format": "string",
                                            "example": "Something went wrong, please try again later."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/doctors": {
            "get": {
                "tags": [
                    "Doctors"
                ],
                "summary": "Get doctors page",
                "description": "Get doctors page",
                "operationId": "App\\Http\\Controllers\\API\\V1\\DoctorController::index",
                "parameters": [
                    {
                        "name": "first_name",
                        "in": "query",
                        "description": "Filter doctors by first name",
                        "required": false,
                        "example": "David"
                    },
                    {
                        "name": "last_name",
                        "in": "query",
                        "description": "Filter doctors by last name",
                        "required": false,
                        "example": "Johnson"
                    },
                    {
                        "name": "region_id",
                        "in": "query",
                        "description": "Filter doctors by region id",
                        "required": false,
                        "example": "1"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "example": "1"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items amount on page",
                        "required": false,
                        "example": "15"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order list by a field",
                        "required": false,
                        "example": "first_name"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "Order direction",
                        "required": false,
                        "example": "asc"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Doctors has been succesfully received",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "title": "Doctors",
                                            "description": "Doctors list",
                                            "items": {
                                                "type": "object",
                                                "$ref": "#/components/schemas/DoctorResource"
                                            }
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "first": {
                                                        "example": "http://online-hautarzt.com/api/v1/doctors?page=1"
                                                    },
                                                    "last": {
                                                        "example": "http://online-hautarzt.com/api/v1/doctors?page=10"
                                                    },
                                                    "prev": {
                                                        "example": "http://online-hautarzt.com/api/v1/doctors?page=4"
                                                    },
                                                    "next": {
                                                        "example": "http://online-hautarzt.com/api/v1/doctors?page=6"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "meta": {
                                            "items": {
                                                "properties": {
                                                    "current_page": {
                                                        "example": "5"
                                                    },
                                                    "from": {
                                                        "example": "9"
                                                    },
                                                    "last_page": {
                                                        "example": "10"
                                                    },
                                                    "path": {
                                                        "example": "http://online-hautarzt.com/api/v1/doctors"
                                                    },
                                                    "per_page": {
                                                        "example": "2"
                                                    },
                                                    "to": {
                                                        "example": "10"
                                                    },
                                                    "total": {
                                                        "example": "19"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal technical error was happened",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "format": "string",
                                            "example": "Something went wrong, please try again later."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/doctors/{id}/activate": {
            "patch": {
                "tags": [
                    "Doctors"
                ],
                "summary": "Create a request for activation a doctor",
                "description": "Create a request for doctor activation",
                "operationId": "App\\Http\\Controllers\\API\\V1\\DoctorController::activate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "A doctor's identificator",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A request has been succesfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/DoctorResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authorization failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "format": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Current user has not permissions to do this action",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "format": "string",
                                            "example": "This action is unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "format": "string",
                                            "example": "No query results for model [App\\Models\\Doctor]."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal technical error was happened",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "format": "string",
                                            "example": "Something went wrong, please try again later."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/doctors/{id}/close": {
            "patch": {
                "tags": [
                    "Doctors"
                ],
                "summary": "Close doctor account",
                "description": "Close doctor account",
                "operationId": "App\\Http\\Controllers\\API\\V1\\DoctorController::close",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "A doctor's identificator",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A request has been succesfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/DoctorResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authorization failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "format": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Current user has not permissions to do this action",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "format": "string",
                                            "example": "This action is unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "format": "string",
                                            "example": "No query results for model [App\\Models\\Doctor]."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal technical error was happened",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "format": "string",
                                            "example": "Something went wrong, please try again later."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/languages": {
            "get": {
                "tags": [
                    "Languages"
                ],
                "summary": "Get all languages",
                "description": "Get all languages",
                "operationId": "App\\Http\\Controllers\\API\\V1\\LanguageController::index",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "items": {
                                                "type": "object",
                                                "$ref": "#/components/schemas/LanguageResource"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal technical error was happened",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "format": "string",
                                            "example": "Something went wrong, please try again later."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/regions": {
            "get": {
                "tags": [
                    "Regions"
                ],
                "summary": "Get all regions",
                "description": "Get all regions",
                "operationId": "App\\Http\\Controllers\\API\\V1\\RegionController::index",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "items": {
                                                "type": "object",
                                                "$ref": "#/components/schemas/RegionResource"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal technical error was happened",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "format": "string",
                                            "example": "Something went wrong, please try again later."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "CarbonResource": {
                "title": "Carbon resource",
                "description": "Resource for datetime representation",
                "properties": {
                    "date": {
                        "format": "string",
                        "example": "2019-12-11 12:25:00.000000"
                    },
                    "timezone_type": {
                        "format": "int64",
                        "example": 3
                    },
                    "timezone": {
                        "format": "string",
                        "example": "Europe/Berlin"
                    }
                },
                "type": "object"
            },
            "DoctorResource": {
                "title": "Doctor resource",
                "description": "Resource for a doctor representation",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "A doctors's identificator",
                        "format": "int64",
                        "example": "5"
                    },
                    "photo": {
                        "title": "Photo",
                        "description": "Photo",
                        "format": "string",
                        "example": "public/doctors/2019-12/john-sanchess89.jpeg"
                    },
                    "prefix": {
                        "title": "Prefix",
                        "description": "A doctor's prefix",
                        "format": "string",
                        "example": "Dr. med."
                    },
                    "first_name": {
                        "title": "First name",
                        "description": "A doctor's first name",
                        "format": "string",
                        "example": "Davide"
                    },
                    "last_name": {
                        "title": "Last name",
                        "description": "A doctor's last name",
                        "format": "string",
                        "example": "Donghi"
                    },
                    "email": {
                        "title": "E-mail",
                        "description": "A doctor's e-mail",
                        "format": "string",
                        "example": "test@gmail.com"
                    },
                    "description": {
                        "title": "Desctiption",
                        "description": "A doctor's description",
                        "format": "string",
                        "example": "I am a good doctor"
                    },
                    "status": {
                        "title": "Status",
                        "description": "A doctor's status",
                        "format": "boolean",
                        "example": "CREATED"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created datetime representation",
                        "format": "object",
                        "$ref": "#/components/schemas/CarbonResource"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Last updated datetime representation",
                        "format": "object",
                        "$ref": "#/components/schemas/CarbonResource"
                    },
                    "region": {
                        "$ref": "#/components/schemas/RegionResource"
                    },
                    "location": {
                        "$ref": "#/components/schemas/LocationResource"
                    },
                    "languages": {
                        "title": "Languages",
                        "description": "Doctor's languages",
                        "items": {
                            "type": "object",
                            "$ref": "#/components/schemas/LanguageResource"
                        }
                    }
                },
                "type": "object"
            },
            "LanguageResource": {
                "title": "Language resource",
                "description": "Resource for a language representation",
                "properties": {
                    "id": {
                        "schema": "LanguageResource",
                        "title": "ID",
                        "description": "A language's identificator",
                        "format": "int64",
                        "example": "5"
                    },
                    "code": {
                        "schema": "LanguageResource",
                        "title": "A language's code",
                        "description": "A language's code",
                        "format": "string",
                        "example": "en"
                    },
                    "name": {
                        "schema": "LanguageResource",
                        "title": "A language's name",
                        "description": "A language's name",
                        "format": "string",
                        "example": "English"
                    }
                },
                "type": "object"
            },
            "LocationResource": {
                "title": "Location resource",
                "description": "Resource for a location representation",
                "properties": {
                    "id": {
                        "schema": "LocationResource",
                        "title": "ID",
                        "description": "A locations's identificator",
                        "format": "int64",
                        "example": "5"
                    },
                    "country": {
                        "schema": "LocationResource",
                        "title": "A location's country",
                        "description": "A location's country",
                        "format": "string",
                        "example": "USA"
                    },
                    "city": {
                        "schema": "LocationResource",
                        "title": "A location's city",
                        "description": "A location's city",
                        "format": "string",
                        "example": "New York"
                    },
                    "state": {
                        "schema": "LocationResource",
                        "title": "A location's state",
                        "description": "A location's state",
                        "format": "string",
                        "example": "New York"
                    },
                    "postal_code": {
                        "schema": "LocationResource",
                        "title": "A location's postal code",
                        "description": "A location's postal code",
                        "format": "int64",
                        "example": "12345"
                    },
                    "address": {
                        "schema": "LocationResource",
                        "title": "A location's address",
                        "description": "A location's address",
                        "format": "string",
                        "example": "address"
                    },
                    "latitude": {
                        "schema": "LocationResource",
                        "title": "A location's latitude",
                        "description": "A location's latitude",
                        "format": "double",
                        "example": 5.123,
                        "nullable": true
                    },
                    "longitude": {
                        "schema": "LocationResource",
                        "title": "A location's longitude",
                        "description": "A location's longitude",
                        "format": "double",
                        "example": 8.123,
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "RegionResource": {
                "title": "Region resource",
                "description": "Resource for a region representation",
                "properties": {
                    "id": {
                        "schema": "RegionResource",
                        "title": "ID",
                        "description": "A region's identificator",
                        "format": "int64",
                        "example": "5"
                    },
                    "name": {
                        "schema": "RegionResource",
                        "title": "A region's name",
                        "description": "A region's name",
                        "format": "string",
                        "example": "Nevada"
                    }
                },
                "type": "object"
            }
        }
    }
}